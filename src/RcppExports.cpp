// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// wlocpoly
Eigen::VectorXd wlocpoly(const Eigen::MatrixXd x, const Eigen::VectorXd y, const Eigen::MatrixXd newx, const int d, const std::string kernel_type, const double h);
RcppExport SEXP _wlocpoly_wlocpoly(SEXP xSEXP, SEXP ySEXP, SEXP newxSEXP, SEXP dSEXP, SEXP kernel_typeSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type newx(newxSEXP);
    Rcpp::traits::input_parameter< const int >::type d(dSEXP);
    Rcpp::traits::input_parameter< const std::string >::type kernel_type(kernel_typeSEXP);
    Rcpp::traits::input_parameter< const double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(wlocpoly(x, y, newx, d, kernel_type, h));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_wlocpoly_wlocpoly", (DL_FUNC) &_wlocpoly_wlocpoly, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_wlocpoly(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
